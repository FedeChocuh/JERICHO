/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider, BaseWalletLocked, AbstractAddress } from "fuels";
import { Interface, Contract } from "fuels";
import type { JERICHOAbi, JERICHOAbiInterface } from "../JERICHOAbi";
const _abi = {
  types: [
    {
      typeId: 0,
      type: "bool",
      components: null,
      typeParameters: null,
    },
  ],
  functions: [
    {
      inputs: [],
      name: "test_function",
      output: {
        name: "",
        type: 0,
        typeArguments: null,
      },
    },
  ],
  loggedTypes: [],
  messagesTypes: [],
};

export class JERICHOAbi__factory {
  static readonly abi = _abi;
  static createInterface(): JERICHOAbiInterface {
    return new Interface(_abi) as unknown as JERICHOAbiInterface;
  }
  static connect(
    id: string | AbstractAddress,
    walletOrProvider: BaseWalletLocked | Provider
  ): JERICHOAbi {
    return new Contract(id, _abi, walletOrProvider) as unknown as JERICHOAbi;
  }
}
